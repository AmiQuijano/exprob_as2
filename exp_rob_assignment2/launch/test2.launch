<?xml version="1.0"?>
<launch>
	
<!-- arguments -->
<arg name="domain_path" default="$(find exp_rob_assignment2)/common/domain_test.pddl" />
<arg name="problem_path" default="$(find exp_rob_assignment2)/common/problem_test.pddl" />

<!-- knowledge base -->
<node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen">
<param name="domain_path" value="$(arg domain_path)" />
<param name="problem_path" value="$(arg problem_path)" />
<!-- conditional planning flags -->
<param name="use_unknowns" value="false" />
</node>
	
<!-- problem generation -->
<include file="$(find rosplan_planning_system)/launch/includes/problem_interface.launch">
<arg name="knowledge_base" value="rosplan_knowledge_base" />
<arg name="domain_path" value="$(arg domain_path)" />
<arg name="problem_path" value="$(find exp_rob_assignment2)/common/new_problem.pddl" />
<arg name="problem_topic" value="problem_instance" />
</include>

<!-- planning interface -->
<include file="$(find rosplan_planning_system)/launch/includes/planner_interface.launch">
<arg name="use_problem_topic" value="true" />
<arg name="problem_topic" value="/rosplan_problem_interface/problem_instance" />
<arg name="planner_topic" value="planner_output" />
<arg name="domain_path" value="$(arg domain_path)" />
<arg name="data_path" value="$(find rosplan_planning_system)/common/" />
<arg name="planner_command" value="timeout 10 $(find rosplan_planning_system)/common/bin/popf DOMAIN PROBLEM" />
</include>

<!-- parsing interface -->
<node name="rosplan_parsing_interface" pkg="rosplan_planning_system" type="pddl_simple_plan_parser" respawn="false" output="screen">
<param name="knowledge_base" value="rosplan_knowledge_base" />
<param name="planner_topic" value="/rosplan_planner_interface/planner_output" />
<param name="plan_topic"
value="complete_plan" />
</node>

<!-- plan dispatcher -->
<node name="rosplan_plan_dispatcher" pkg="rosplan_planning_system"
type="pddl_simple_plan_dispatcher" respawn="false" output="screen">
<param name="knowledge_base" value="rosplan_knowledge_base" />
<param name="plan_topic" value="/rosplan_parsing_interface/complete_plan" />
<param name="action_dispatch_topic" value="action_dispatch" />
<param name="action_feedback_topic" value="action_feedback" />
</node>

<!-- action interface -->

<!-- goto_waypoint action -->
<node name="rosplan_interface_goto_waypoint" pkg="exp_rob_assignment2" type="goto_waypoint_action"
respawn="false" output="screen">
<param name="knowledge_base" value="rosplan_knowledge_base" />
<param name="pddl_action_name" value="goto_waypoint" />
<param name="action_dispatch_topic" value="/rosplan_plan_dispatcher/action_dispatch" />
<param name="action_feedback_topic" value="/rosplan_plan_dispatcher/action_feedback" />
</node>

<!-- rotate_and_detect action -->
<node name="rosplan_interface_rotate_and_detect" pkg="exp_rob_assignment2" type="rotate_and_detect_action"
respawn="false" output="screen">
<param name="knowledge_base" value="rosplan_knowledge_base" />
<param name="pddl_action_name" value="rotate_and_detect" />
<param name="action_dispatch_topic" value="/rosplan_plan_dispatcher/action_dispatch" />
<param name="action_feedback_topic" value="/rosplan_plan_dispatcher/action_feedback" />
</node>

<!-- goto_lowest_marker_wp action -->
<node name="rosplan_interface_goto_lowest_marker_wp" pkg="exp_rob_assignment2" type="goto_lowest_marker_wp_action"
respawn="false" output="screen">
<param name="knowledge_base" value="rosplan_knowledge_base" />
<param name="pddl_action_name" value="goto_lowest_marker_wp" />
<param name="action_dispatch_topic" value="/rosplan_plan_dispatcher/action_dispatch" />
<param name="action_feedback_topic" value="/rosplan_plan_dispatcher/action_feedback" />
</node>


 <!-- Run Python script that detects aruco markers -->
  <node name="marker_detector" pkg="exp_rob_assignment2" type="aruco_as2.py" output="screen"/>

 <!-- Run Python script that finds the lowest marker ID and its related information -->
  <node name="lowest_marker_info_detector" pkg="exp_rob_assignment2" type="lowest_marker_wp.py" output="screen"/>
      
</launch>