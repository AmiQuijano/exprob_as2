<?xml version="1.0"?>
<launch>

<!-- gazebo -->
<include file="$(find robot_urdf)/launch/gazebo4.launch"/>

<!-- control of robot motion -->
<node name="go_to_point" pkg="motion_plan" type="go_to_point_action.py" respawn="false"/>

<!-- ROSplan manager ????-->
<!-- <node name="rosplan_pipeline_manager" pkg="exercise" type="rosplan_manager"/> -->

<!-- arguments -->
<arg name="domain_path" default="$(find exercise)/common/domain_exercise.pddl" />
<arg name="problem_path" default="$(find exercise)/common/problem_exercise.pddl" />

<!-- knowledge base -->
<node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false"
output="screen">
<param name="domain_path" value="$(arg domain_path)" />
<param name="problem_path" value="$(arg problem_path)" />
<!-- conditional planning flags -->
<param name="use_unknowns" value="false" />
</node>

<!-- problem generation -->
<include file="$(find rosplan_planning_system)/launch/includes/problem_interface.launch">
<arg name="knowledge_base" value="rosplan_knowledge_base" />
<arg name="domain_path" value="$(arg domain_path)" />
<arg name="problem_path" value="$(find exercise)/common/new_problem.pddl" />
<arg name="problem_topic" value="problem_instance" />
</include>

<!-- planning interface -->
<include file="$(find rosplan_planning_system)/launch/includes/planner_interface.launch">
<arg name="use_problem_topic" value="true" />
<arg name="problem_topic" value="/rosplan_problem_interface/problem_instance" />
<arg name="planner_topic" value="planner_output" />
<arg name="domain_path" value="$(arg domain_path)" />
<arg name="data_path" value="$(find rosplan_demos)/common/" />
<arg name="planner_command" value="timeout 10 $(find rosplan_planning_system)/common/bin/popf DOMAIN PROBLEM" />
</include>

<!-- parsing interface -->
<node name="rosplan_parsing_interface" pkg="rosplan_planning_system" type="pddl_simple_plan_parser" respawn="false" output="screen">
<param name="knowledge_base" value="rosplan_knowledge_base" />
<param name="planner_topic" value="/rosplan_planner_interface/planner_output" />
<param name="plan_topic" value="complete_plan" />
</node>

<!-- plan dispatcher -->
<node name="rosplan_plan_dispatcher" pkg="rosplan_planning_system" type="pddl_simple_plan_dispatcher" respawn="false" output="screen">
<param name="knowledge_base" value="rosplan_knowledge_base" />
<param name="plan_topic" value="/rosplan_parsing_interface/complete_plan" />
<param name="action_dispatch_topic" value="action_dispatch" />
<param name="action_feedback_topic" value="action_feedback" />
</node>

<!-- simulated actions -->
<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
<arg name="pddl_action_name" value="sleep" />
</include>
<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
<arg name="pddl_action_name" value="inspect" />
<arg name="action_probability" default="1" />
</include>

<!-- action interface -->
<node name="rosplan_interface_goto_waypoint" pkg="my_rosplan_interface" type="myaction2" respawn="false" output="screen">
<param name="knowledge_base" value="rosplan_knowledge_base" />
<param name="pddl_action_name" value="goto_waypoint" />
<param name="action_dispatch_topic" value="/rosplan_plan_dispatcher/action_dispatch" />
<param name="action_feedback_topic" value="/rosplan_plan_dispatcher/action_feedback" />
</node>

</launch>